{"version":3,"sources":["app/actions/people.js","app/reducers/people.js","app/store.js","components/Navbar.js","constants/colors.js","components/SideBar.js","components/UI/InputField.js","components/UI/TopLine.js","components/UI/Title.js","pages/HomePage.js","components/UI/GridButton.js","components/UI/ListButton.js","components/UI/SelectField.js","components/UI/SocialLinks.js","components/Card.js","components/CardsGrid.js","components/CardsList.js","pages/PeoplePage.js","pages/FavouritesPage.js","pages/ContactsPage.js","pages/CompaniesPage.js","App.js","serviceWorker.js","index.js"],"names":["SET_PEOPLE","ADD_TO_CONTACTS","REMOVE_FROM_CONTACTS","ADD_TO_FAVOURITES","REMOVE_FROM_FAVOURITES","initialState","people","contacts","favourites","cities","rootReducer","combineReducers","state","action","type","citiesList","map","item","city","result","forEach","includes","push","filter","isContact","isFavourite","newContact","person","newContactPeople","newContactIndex","findIndex","id","removedContact","removedContactPeople","removedContactIndex","updatedContacts","updatedContactIndex","splice","favouritePerson","newFavouritePeople","newFavouriteIndex","removedFavourite","removedFavouritePeople","removedFavouriteIndex","updatedFavourites","updatedFavouriteIndex","store","createStore","applyMiddleware","ReduxThunk","NavList","styled","ul","NavItem","li","StyledNavLink","NavLink","NavText","div","NavBar","mobile","hideMobileMenu","menuItems","path","title","icon","HomeOutlined","color","ContactsOutlined","FavoriteBorderOutlined","PermIdentityOutlined","ListAltOutlined","className","navData","isActive","onClick","to","useStyles","makeStyles","theme","avatar","width","spacing","height","margin","closeIcon","position","right","top","breakpoints","up","display","SideBarContainer","Name","Colors","Position","BottomButtons","SideBar","onMobileMenuToggle","classes","IconButton","edge","Close","Avatar","alt","src","Grid","container","alignItems","Settings","ExitToApp","InputField","TextField","label","variant","menuIcon","Container","Row","RightCol","TopLine","Heading","h1","Title","HomePage","GridButton","onPress","ListButton","formControl","minWidth","selectEmpty","marginTop","SelectField","useSelector","useState","setCity","FormControl","Select","native","value","onChange","event","target","inputProps","name","Link","a","SocialLinks","props","links","facebook","href","Facebook","fontSize","twitter","Twitter","instagram","Instagram","linkedin","LinkedIn","button","maxWidth","borderRadius","marginBottom","marginRight","marginLeft","CardWrapper","Buttons","City","Card","list","setIsContact","setIsFavourite","dispatch","useDispatch","social_networks","Button","size","style","borderColor","cardsContainer","cardItem","boxSizing","paddingTop","paddingBottom","borderBottom","borderRight","CardsGrid","items","xs","md","lg","xl","CardsList","PeoplePage","memo","isLoading","errorMessage","isListView","setIsListView","wrap","justifyContent","nowrap","Divider","FavouritesPage","ContactsPage","CompaniesPage","Content","main","App","setIsLoading","setErrorMessage","mobileOpen","setMobileOpen","mobileMenuHandler","loadPeople","useCallback","axios","get","then","response","data","catch","error","message","useEffect","element","Boolean","window","location","hostname","match","createTheme","palette","primary","secondary","deleteButton","values","sm","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1366af58.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const SET_PEOPLE = 'SET_PEOPLE';\nexport const ADD_TO_CONTACTS = 'ADD_TO_CONTACTS';\nexport const REMOVE_FROM_CONTACTS = 'REMOVE_FROM_CONTACTS';\nexport const ADD_TO_FAVOURITES = 'ADD_TO_FAVOURITES';\nexport const REMOVE_FROM_FAVOURITES = 'REMOVE_FROM_FAVOURITES';\n\nexport const fetchPeople = () => (\n    dispatch => {\n        axios\n            .get('./data/data.json')\n            .then( response => {\n                dispatch({\n                    type: SET_PEOPLE, \n                    people: response.data.people\n                });\n            })\n            .catch( error => {\n                throw error\n            })\n    }\n)\n\nexport const addToContacts = item => (\n    {\n        type: ADD_TO_CONTACTS, \n        person: item \n    }\n);\n\nexport const removeFromContacts = item => (\n    {\n        type: REMOVE_FROM_CONTACTS, \n        person: item \n    }\n);\n\nexport const addToFavourites = item => (\n    {\n        type: ADD_TO_FAVOURITES, \n        person: item \n    }\n);\n\nexport const removeFromFavourites = item => (\n    {\n        type: REMOVE_FROM_FAVOURITES, \n        person: item \n    }\n);","import { \n    SET_PEOPLE,\n    ADD_TO_CONTACTS,\n    REMOVE_FROM_CONTACTS,\n    ADD_TO_FAVOURITES,\n    REMOVE_FROM_FAVOURITES\n} from \"../actions/people\";\n \nconst initialState = {\n    people: [],\n    contacts: [],\n    favourites: [],\n    cities: [],\n};\n\nexport default (state = initialState, action={}) => {\n    switch (action.type) {\n        case SET_PEOPLE:\n            const citiesList = () => {\n                const cities = action.people.map(item => item.city);\n                const result = [];\n\n                cities.forEach( city => {\n                    if (!result.includes(city)) {\n                        result.push(city);\n                    }\n                });\n\n                return result;\n            };\n\n            return {\n                ...state,\n                people: action.people,\n                contacts: action.people.filter( item => item.isContact),\n                favourites: action.people.filter( item => item.isFavourite),\n                cities: citiesList()\n            }\n        case ADD_TO_CONTACTS:\n            const newContact = action.person;\n\n            const newContactPeople = [...state.people];\n            const newContactIndex = state.people.findIndex( item => item.id === newContact.id);\n            newContactPeople[newContactIndex].isContact = true;\n\n            return {\n                ...state,\n                people: newContactPeople,\n                contacts: [...state.contacts, newContact],\n                favourites: newContactPeople.filter( item => item.isFavourite),\n            }\n        case REMOVE_FROM_CONTACTS:\n            const removedContact = action.person;\n\n            const removedContactPeople = [...state.people];\n            const removedContactIndex = state.people.findIndex( item => item.id === removedContact.id);\n            removedContactPeople[removedContactIndex].isContact = false;\n\n            const updatedContacts = [...state.contacts];\n            const updatedContactIndex = state.contacts.findIndex( item => item.id === removedContact.id);\n            updatedContacts.splice(updatedContactIndex, 1);\n\n            return {\n                ...state,\n                people: removedContactPeople,\n                contacts: updatedContacts,\n                favourites: removedContactPeople.filter( item => item.isFavourite),\n            }\n        case ADD_TO_FAVOURITES:\n            const favouritePerson = action.person;\n\n            const newFavouritePeople = [...state.people];\n            const newFavouriteIndex = state.people.findIndex( item => item.id === favouritePerson.id);\n            newFavouritePeople[newFavouriteIndex].isFavourite = true;\n\n            return {\n                ...state,\n                people: newFavouritePeople,\n                contacts: newFavouritePeople.filter( item => item.isContact),\n                favourites: [...state.favourites, favouritePerson]\n            }\n        case REMOVE_FROM_FAVOURITES:\n            const removedFavourite = action.person;\n\n            const removedFavouritePeople = [...state.people];\n            const removedFavouriteIndex = state.people.findIndex( item => item.id === removedFavourite.id);\n            removedFavouritePeople[removedFavouriteIndex].isFavourite = false;\n\n            const updatedFavourites = [...state.favourites];\n            const updatedFavouriteIndex = state.favourites.findIndex( item => item.id === removedFavourite.id);\n            updatedFavourites.splice(updatedFavouriteIndex, 1);\n\n            return {\n                ...state,\n                people: removedFavouritePeople,\n                contacts: removedFavouritePeople.filter( item => item.isContact),\n                favourites: updatedFavourites\n            }\n        default:\n            return state;\n    }\n}","import { \n  combineReducers, \n  createStore, \n  applyMiddleware \n} from '@reduxjs/toolkit';\nimport ReduxThunk from 'redux-thunk';\nimport peopleReducer from './reducers/people';\n\nconst rootReducer = combineReducers({\n  people: peopleReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n    HomeOutlined, \n    ContactsOutlined, \n    FavoriteBorderOutlined, \n    PermIdentityOutlined, \n    ListAltOutlined \n} from '@material-ui/icons';\n\n\nconst NavList = styled.ul`\n    margin: 0;\n    padding: 0;\n    list-style: none;\n`;\n\nconst NavItem = styled.li`\n    color: white;\n    text-transform: uppercase;\n    text-decoration: none;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n    display: flex;\n    align-items: center;\n    color: white;\n    text-transform: uppercase;\n    text-decoration: none;\n    box-sizing: border-box;\n    padding: 10px 40px;\n\n    &.active {\n        background: #39a6f3;\n    }\n\n    @media (max-width: 1023px) {\n        padding: 10px 20px;\n    }\n`;\n\nconst NavText = styled.div`\n    margin-left: 5px;\n`;\n\nconst NavBar = ({ mobile, hideMobileMenu }) => {\n    const menuItems = [\n        {\n            path: '/home',\n            title: 'Home',\n            icon: <HomeOutlined color='white' />,\n        },\n        {\n            path: '/contacts',\n            title: 'Contacts',\n            icon: <ContactsOutlined color='white' />,\n        },\n        {\n            path: '/favourites',\n            title: 'Favourites',\n            icon: <FavoriteBorderOutlined color='white' />,\n        },\n        {\n            path: '/people',\n            title: 'People',\n            icon: <PermIdentityOutlined color='white' />,\n        },\n        {\n            path: '/companies',\n            title: 'Companies',\n            icon:  <ListAltOutlined color='white' />,\n        }\n    ];\n\n    return (\n    <nav>\n        <NavList>\n            {menuItems.map( item => <NavItem key={item.title}>\n                    <StyledNavLink  \n                        className={ navData => navData.isActive ? 'active' : ''}\n                        onClick={ () => {\n                            if (mobile) {\n                                hideMobileMenu()\n                            }\n                        }}\n                        to={item.path}\n                    >\n                        {item.icon}\n                        <NavText>{item.title}</NavText>\n                    </StyledNavLink>\n                </NavItem>\n            )}\n        </NavList>\n    </nav>\n    )\n};\n\nexport default NavBar;","export default {\n    primary: '#39a6f3',\n    secondary: '#a4a3a3',\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Grid, Avatar, IconButton, makeStyles } from '@material-ui/core';\nimport { Settings, ExitToApp, Close } from '@material-ui/icons';\n\nimport NavBar from './Navbar';\nimport Colors from '../constants/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(22),\n    height: theme.spacing(22),\n    margin: '0 auto',\n  },\n  closeIcon: {\n    position: 'absolute',\n    right: '10px',\n    top: '10px',\n    [theme.breakpoints.up('sm')]: {\n        display: 'none',\n    },\n  }\n}));\n\nconst SideBarContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: 20px 0;\n    background: black;\n    color: white;\n    @media (max-width: 1023px) {\n        width: 230px;\n    }\n    @media (max-width: 767px) {\n        width: 100%;\n        align-items: center;\n        z-index: 100;\n        transform: translate(-100%);\n        transition: transform 0.3s linear;\n        &.active {\n            transform: translate(0);\n        }\n    }\n`;\n\nconst Name = styled.div`\n    font-size: 30px;\n    font-weight: 700;\n    text-align: center;\n    text-transform: uppercase;\n    color: ${Colors.secondary};\n    margin: 10px 0;\n`;\n\nconst Position = styled.div`\n    text-align: center;\n    color: ${Colors.primary};\n`;\n\nconst BottomButtons = styled.div`\n    box-sizing: border-box;\n    padding: 0 40px;\n    @media (max-width: 1023px) {\n        padding: 0 20px;\n    }\n`;\n\nconst SideBar = ({ mobile, onMobileMenuToggle }) => {\n    const classes = useStyles();\n\n    const hideMobileMenuHandler = () => {\n        onMobileMenuToggle();\n    }\n            \n    return (\n        <SideBarContainer className={ mobile ? 'active' : '' }>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                onClick={onMobileMenuToggle}\n                className={classes.closeIcon}\n            >\n                <Close color=\"secondary\" />\n            </IconButton>\n            <div>\n                <div>\n                    <Avatar \n                        alt='avatar' \n                        src='/assets/images/man.jpeg' \n                        className={classes.avatar} \n                    />\n                </div>\n                <Name>John Doe</Name>\n                <Position>Sunscript, CEO</Position>\n            </div>\n            <NavBar mobile={mobile} hideMobileMenu={hideMobileMenuHandler} />\n            <BottomButtons>\n                <Grid container alignItems=\"center\" spacing={1}>\n                    <Grid item>\n                        <Settings color='primary' />\n                    </Grid>\n                    <Grid>Settings</Grid>\n                </Grid>\n                <Grid container alignItems=\"center\" spacing={1}>\n                    <Grid item>\n                        <ExitToApp color='primary' />\n                    </Grid>\n                    <Grid item>Logout</Grid>\n                </Grid>\n            </BottomButtons>\n        </SideBarContainer>\n    );\n};\n\nexport default SideBar;","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nconst InputField = () => (\n    <TextField \n        id='outlined-basic'\n        type='search'\n        label='Search' \n        variant='outlined' \n    />\n);\n\nexport default InputField;","import React from 'react';\nimport { Avatar, IconButton, makeStyles } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport styled from 'styled-components';\n\nimport InputField from './InputField';\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n      width: '40px',\n      height: '40px',\n      margin: '5px 10px 0 0',\n    },\n    menuIcon: {\n        position: 'absolute',\n        top: '10px',\n        right: '10px',\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    }\n}));\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 40px;\n    @media (max-width: 767px) {\n        margin-top: 20px;\n    }\n    @media (max-width: 500px) {\n        flex-direction: column-reverse;\n    }\n`;\n\nconst Row = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst RightCol = styled.div`\n    display: flex;\n    align-items: center;\n    text-align: right;\n    & img {\n        margin-left: 10px;\n    }\n    @media (max-width: 500px) {\n        margin-bottom: 20px;\n    }\n`;\n\nconst TopLine = ({ onMobileMenuToggle }) => {\n    const classes = useStyles();\n    return (\n        <>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                onClick={onMobileMenuToggle}\n                className={classes.menuIcon}\n            >\n                <MenuIcon color=\"primary\" />\n            </IconButton>\n            <Container>\n                <InputField />\n                <RightCol>\n                    <div>\n                        <div>Welcome,</div>\n                        <Row>\n                            <Avatar className={classes.avatar}>JD</Avatar>\n                            <div>Jon Doe</div>\n                        </Row>\n                    </div>\n                    <img alt='logo' src='/assets/images/logo.png' width='70px' />\n                </RightCol> \n            </Container>\n        </>\n    )\n};\n\nexport default TopLine;","import React from 'react';\nimport styled from 'styled-components';\n\nimport Colors from '../../constants/colors';\n\nconst Heading = styled.h1`\n    font-size: 46px;\n    font-weight: 700;\n    color: ${Colors.primary};\n    margin: 15px 0 30px;\n    @media (max-width: 1023px) {\n        font-size: 40px;\n    }\n    @media (max-width: 767px) {\n        font-size: 26px;\n    }\n`\n\nconst Title = ({ title }) => <Heading>{title}</Heading>;\n\nexport default Title;","import React from 'react';\n\nimport Title from '../components/UI/Title';\n\nconst HomePage = () => (\n    <Title title='Home' />\n);\n\nexport default HomePage;","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AppsIcon from '@material-ui/icons/Apps';\n\nconst GridButton = ({ onPress }) => (\n    <IconButton onClick={onPress}>\n        <AppsIcon color=\"primary\" />\n    </IconButton>\n)\n\nexport default GridButton;","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListIcon from '@material-ui/icons/List';\n\nconst ListButton = ({ onPress }) => (\n    <IconButton onClick={onPress}>\n        <ListIcon color=\"primary\" />\n    </IconButton>\n)\n\nexport default ListButton;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { \n    Select, \n    FormControl, \n    makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SelectField = () => {\n    const cities = useSelector( state => state.people.cities );\n    const [city, setCity] = useState('');\n    const classes = useStyles();\n\n    const changeCityHandle = (event) => {\n        setCity(event.target.value)\n    };\n\n    return (\n        <FormControl className={classes.formControl}>\n            <Select\n                native\n                value={city}\n                onChange={changeCityHandle}\n                inputProps={{\n                    name: 'city',\n                    id: 'city-native-simple',\n                }}\n            >\n                <option aria-label=\"None\" value=\"\" />\n                {cities.map( item => (\n                    <option key={item} value={item}>{item}</option>\n                ))}\n            </Select>\n        </FormControl>\n    );\n};\n\nexport default SelectField;","import React from 'react';\nimport styled from 'styled-components';\nimport { \n    Facebook, \n    Twitter, \n    Instagram, \n    LinkedIn \n} from '@material-ui/icons';\n\nimport Colors from '../../constants/colors';\n\nconst Container = styled.div`\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: center;\n    margin: 10px 0;\n`;\n\nconst Link = styled.a`\n    width: 34px;\n    height: 34px;\n    box-sizing: border-box;\n    border-radius: 50%;\n    border: 1px solid ${Colors.primary};\n    padding: 5px;\n    margin: 0 5px;\n`;\n\nconst SocialLinks = (props) => {\n    const { links } = props;\n\n    return (\n        <Container>\n            {links.facebook && <Link href={links.facebook}>\n                <Facebook color='primary' fontSize=\"small\" />\n            </Link>}\n            {links.twitter && <Link href={links.twitter}>\n                <Twitter color='primary' fontSize=\"small\" />\n            </Link>}\n            {links.instagram && <Link href={links.instagram}>\n                <Instagram color='primary' fontSize=\"small\" />\n            </Link>}\n            {links.linkedin && <Link href={links.linkedin}>\n                <LinkedIn color='primary' fontSize=\"small\" />\n            </Link>}\n        </Container>\n    );\n};\n\nexport default SocialLinks;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { Avatar, Button, makeStyles } from '@material-ui/core';\n\nimport SocialLinks from './UI/SocialLinks';\nimport Colors from '../constants/colors';\nimport * as peopleActions from '../app/actions/people';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n  },\n  button: {\n    width: '100%',\n    maxWidth: '230px',\n    borderRadius: '20px',\n    marginBottom: theme.spacing(1),\n    marginRight: 'auto',\n    marginLeft: 'auto',\n  },\n}));\n\nconst CardWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    text-align: center;\n    &.list {\n        flex-direction: row;\n        justify-content: space-between;\n    }\n    &.grid {\n        flex-direction: column;\n    }\n`\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-top: 20px;\n`\n\nconst Name = styled.div`\n    font-size: 26px;\n    font-weight: 600;\n    color: ${Colors.primary};\n    margin: 10px 0;\n`\n\nconst Position = styled.div`\n    color: ${Colors.secondary};\n`\n\nconst City = styled.div`\n    color: ${Colors.secondary};\n`\n\nconst Card = ({ person, list }) => {\n    const [ isContact, setIsContact] = useState(person.isContact);\n    const [ isFavourite, setIsFavourite] = useState(person.isFavourite);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const addToContactsHandler = () => {\n        dispatch(peopleActions.addToContacts(person));\n        setIsContact(true);\n    };\n\n    const removeFromContactsHandler = () => {\n        dispatch(peopleActions.removeFromContacts(person));\n        setIsContact(false);\n    };\n\n    const addToFavouritesHandler = () => {\n        dispatch(peopleActions.addToFavourites(person));\n        setIsFavourite(true);\n    };\n\n    const removeFromFavouritesHandler = () => {\n        dispatch(peopleActions.removeFromFavourites(person));\n        setIsFavourite(false);\n    };\n\n    return (\n        <CardWrapper className={list ? 'list' : 'grid'} >\n            <Avatar \n                alt='avatar' \n                src={person.avatar} \n                className={classes.avatar} \n            />\n             <div>\n                <Name>{person.name}</Name>\n                <Position>{person.position}</Position>\n            </div>\n            <div>\n                <SocialLinks links={person.social_networks} />\n                <City>{person.city}</City>\n            </div>\n            <Buttons>\n                { !isContact && \n                    <Button \n                        variant=\"outlined\" \n                        size=\"small\" \n                        color=\"primary\" \n                        className={classes.button}\n                        onClick={addToContactsHandler}\n                    >Add to contacts</Button>\n                }\n                { isContact && \n                    <Button \n                        variant=\"outlined\" \n                        size=\"small\" \n                        style={{color: 'red', borderColor: 'red'}} \n                        className={classes.button}\n                        onClick={removeFromContactsHandler}\n                    >Delete from contacts</Button>}\n                { !isFavourite && \n                    <Button \n                        variant=\"outlined\" \n                        size=\"small\" \n                        color=\"primary\" \n                        className={classes.button}\n                        onClick={addToFavouritesHandler}\n                    >Add to favourites</Button>}\n                { isFavourite && \n                    <Button \n                        variant=\"outlined\" \n                        size=\"small\" \n                        style={{color: 'red', borderColor: 'red'}} \n                        className={classes.button}\n                        onClick={removeFromFavouritesHandler}\n                    >Delete from favourites</Button>}\n            </Buttons>\n        </CardWrapper>\n    );\n};\n\nexport default Card;\n\n","import React from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\n\nimport Card from './Card';\n\nconst useStyles = makeStyles( (theme) => ({\n    cardsContainer: {\n        marginTop: '30px',\n    },\n    cardItem: {\n        boxSizing: 'border-box',\n        paddingTop: '20px',\n        paddingBottom: '20px',\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n        [theme.breakpoints.up('md')]: {\n            borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n            '&:nth-child(2n)': {\n                borderRight: '0',\n            },\n        },\n        [theme.breakpoints.up('lg')]: {\n            '&:nth-child(2n)': {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n            },\n            '&:nth-child(3n)': {\n                borderRight: '0',\n            },\n        },\n        [theme.breakpoints.up('xl')]: {\n            '&:nth-child(3n)': {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n            },\n            '&:nth-child(4n)': {\n                borderRight: '0',\n            },\n        },\n    },\n}));\n\nconst CardsGrid = ({ items }) => {\n    const classes = useStyles(); \n\n    return (\n        <Grid container spacing={3} className={classes.cardsContainer}>\n            { items.map( person => (\n                <Grid \n                    item\n                    key={person.id} \n                    xs={12} \n                    md={6} \n                    lg={4}\n                    xl={3}\n                    className={classes.cardItem}\n                >\n                    <Card person={person} />\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default CardsGrid;","import React from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\n\nimport Card from './Card';\n\nconst useStyles = makeStyles( (theme) => ({\n    cardsContainer: {\n        marginTop: '30px',\n    },\n    cardItem: {\n        boxSizing: 'border-box',\n        paddingTop: '20px',\n        paddingBottom: '20px',\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n        [theme.breakpoints.up('md')]: {\n            borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n            '&:nth-child(2n)': {\n                borderRight: '0',\n            },\n        },\n        [theme.breakpoints.up('lg')]: {\n            '&:nth-child(2n)': {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n            },\n            '&:nth-child(3n)': {\n                borderRight: '0',\n            },\n        },\n        [theme.breakpoints.up('xl')]: {\n            '&:nth-child(3n)': {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)',\n            },\n            '&:nth-child(4n)': {\n                borderRight: '0',\n            },\n        },\n    },\n}));\n\nconst CardsList = ({ items }) => {\n    const classes = useStyles(); \n\n    return (\n        <Grid container spacing={3} className={classes.cardsContainer}>\n            { items.map( person => (\n                <Grid \n                    item\n                    key={person.id} \n                    xs={12}\n                    className={classes.cardItem}\n                >\n                    <Card person={person} list />\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default CardsList;","import React, { useState, memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Grid, Divider } from '@material-ui/core';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nimport Title from '../components/UI/Title';\nimport GridButton from '../components/UI/GridButton';\nimport ListButton from '../components/UI/ListButton';\nimport SelectField from '../components/UI/SelectField';\nimport CardsGrid from '../components/CardsGrid';\nimport CardsList from '../components/CardsList';\n\nconst PeoplePage = memo(({isLoading, errorMessage}) => {\n    const people = useSelector( state => state.people.people );\n    const [ isListView, setIsListView ] = useState(false);\n\n    return (\n        <div>\n            <Grid \n                container \n                wrap=\"nowrap\" \n                alignItems=\"center\" \n                justifyContent=\"space-between\" \n            >\n                <Grid container item alignItems=\"center\" spacing={1}>\n                    <Grid item>\n                        <Title title='People' />\n                    </Grid>\n                    <Grid item>\n                        <GridButton \n                            onPress={() => setIsListView(false)}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <ListButton \n                            onPress={() => setIsListView(true)}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container nowrap alignItems=\"center\" justifyContent=\"flex-end\" spacing={1}>\n                    <Grid item>\n                        <LocationOnIcon color='primary' />\n                    </Grid>\n                    <Grid item>\n                        <SelectField />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Divider />\n            { isLoading && <p>Loaging</p> }\n            { !isLoading && errorMessage && <p>{errorMessage}</p>}\n            { !isLoading && !errorMessage && !isListView &&\n                <CardsGrid items={people} />\n            }\n            { !isLoading && !errorMessage && isListView &&\n                <CardsList items={people} />\n            }\n        </div>\n    )\n});\n\nexport default PeoplePage;","import React, { useState, memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Grid, Divider } from '@material-ui/core';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nimport Title from '../components/UI/Title';\nimport GridButton from '../components/UI/GridButton';\nimport ListButton from '../components/UI/ListButton';\nimport SelectField from '../components/UI/SelectField';\nimport CardsList from '../components/CardsList';\nimport CardsGrid from '../components/CardsGrid';\n\nconst FavouritesPage = memo(({isLoading, errorMessage}) => {\n    const people = useSelector( state => state.people.people);\n    const favourites = people.filter( item => item.isFavourite);\n    const [ isListView, setIsListView ] = useState(false);\n\n    return (\n        <div>\n            <Grid \n                container \n                wrap=\"nowrap\" \n                alignItems=\"center\" \n                justifyContent=\"space-between\" \n            >\n                <Grid container item alignItems=\"center\" spacing={1}>\n                    <Grid item>\n                        <Title title='Favourites' />\n                    </Grid>\n                    <Grid item>\n                        <GridButton \n                            onPress={() => setIsListView(false)}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <ListButton \n                            onPress={() => setIsListView(true)}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container nowrap alignItems=\"center\" justifyContent=\"flex-end\" spacing={1}>\n                    <Grid item>\n                        <LocationOnIcon color='primary' />\n                    </Grid>\n                    <Grid item>\n                        <SelectField />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Divider />\n            { isLoading && <p>Loaging</p> }\n            { !isLoading && errorMessage && <p>{errorMessage}</p>}\n            { !isLoading && !errorMessage && !isListView &&\n                <CardsGrid items={favourites} />\n            }\n            { !isLoading && !errorMessage && isListView &&\n                <CardsList items={favourites} />\n            }\n        </div>\n    )\n});\n\nexport default FavouritesPage;","import React from 'react';\n\nimport Title from '../components/UI/Title';\n\nconst ContactsPage = () => (\n    <Title title='Contacts' />\n);\n\nexport default ContactsPage;","import React from 'react';\n\nimport Title from '../components/UI/Title';\n\nconst CompaniesPage = () => (\n    <Title title='Companies' />\n);\n\nexport default CompaniesPage;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport SideBar from './components/SideBar';\nimport TopLine from './components/UI/TopLine';\nimport HomePage from './pages/HomePage';\nimport PeoplePage from './pages/PeoplePage';\nimport FavouritesPage from './pages/FavouritesPage';\nimport ContactsPage from './pages/ContactsPage';\nimport CompaniesPage from './pages/CompaniesPage';\n\nimport * as peopleActions from './app/actions/people';\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nconst Content = styled.main`\n  width: 100%;\n  box-sizing: border-box;\n  padding: 40px;\n  margin-left: 300px;\n  @media (max-width: 1023px) {\n    margin-left: 230px;\n    padding: 40px 15px;\n  }\n  @media (max-width: 767px) {\n    margin-left: 0;\n  }\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [ isLoading, setIsLoading] = useState(false);\n  const [ errorMessage, setErrorMessage] = useState(null);\n  const [ mobileOpen, setMobileOpen ] = useState(false);\n\n  const mobileMenuHandler = () => {\n      setMobileOpen(!mobileOpen);\n  };\n\n  const loadPeople = useCallback( async () => {\n    setErrorMessage(null);\n    setIsLoading(true);\n    try {\n      await dispatch(peopleActions.fetchPeople());\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n    setIsLoading(false);\n  }, [dispatch]);\n\n  useEffect( () => {\n    loadPeople();\n  },[dispatch, loadPeople])\n\n  return (\n    <Container>\n      <SideBar mobile={mobileOpen} onMobileMenuToggle={mobileMenuHandler} />\n      <Content>\n        <TopLine onMobileMenuToggle={mobileMenuHandler} />\n        <Routes>\n          <Route path='/' element={<Navigate to='home' />} />\n          <Route path='/home' element={<HomePage />} />\n          <Route path='/contacts' element={<ContactsPage />} />\n          <Route path='/favourites' element={<FavouritesPage isLoading={isLoading} errorMessage={errorMessage} />} />\n          <Route path='/people' element={<PeoplePage isLoading={isLoading} errorMessage={errorMessage} />} />\n          <Route path='/companies' element={<CompaniesPage />} />\n        </Routes>\n      </Content>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import './wdyr';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@material-ui/core';\nimport { store } from './app/store';\nimport App from './App';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#39a6f3'\n    },\n    secondary: {\n      main: '#a4a3a3',\n    },\n    deleteButton: {\n      main: 'red',\n    }\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 768,\n      md: 1024,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}